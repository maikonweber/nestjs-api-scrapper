// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                     Int                      @id @default(autoincrement()) @map("id")
  username               String                   @unique
  name                   String
  email                  String                   @unique
  hashed                 String
  salt                   String
  createdAt              DateTime                 @default(now()) @map("created_at")
  is_admin               Boolean                  @default(false) @map("is_admin")
  lastname               String
  cpf                    String
  caixa_central          caixa_central[]
  carteira               carteira[]
  investimentos_carteira investimentos_carteira[]
  investimento_user      investimento_user[]
  user_transaction       bitcoin_transactions[]
  binance_key_user       binance_key_user[]
  transfer_log           transfer_carteira_log[]
}

model carteira {
  saldo   Decimal
  id      Int     @id @default(autoincrement()) @map("id")
  user_id Int
  user    user    @relation(fields: [user_id], references: [id])
}

model rentabilida_tabela {
  id   Int     @id @default(autoincrement()) @map("id")
  tipo String
  rent Decimal
}

model investimentos_carteira {
  saldo   Decimal
  id      Int     @id @default(autoincrement()) @map("id")
  user_id Int
  user    user    @relation(fields: [user_id], references: [id])
}


model binance_key_user {
  id         Int    @id @default(autoincrement()) @map("id")
  key        String
  app_secret String
  url        String
  user_id    Int
  user       user   @relation(fields: [user_id], references: [id])
}

model transfer_carteira_log {
  id         Int     @id @default(autoincrement()) @map("id")
  amout      Decimal
  sender_id  Int
  receive_id Int
  user       user    @relation(fields: [user_id], references: [id])
  user_id Int 
}

model investimento_user {
  id            Int      @id @default(autoincrement()) @map("id")
  rentabilidade Decimal
  value         Decimal
  start_time    DateTime
  end_time      DateTime
  expect        Decimal
  user_id       Int
  user          user     @relation(fields: [user_id], references: [id])
}

model bitcoin_transactions {
  transaction_id Int      @id @default(autoincrement()) @map("id")
  amount         Decimal  @db.Decimal(20, 8)
  start_time     DateTime @default(now())
  end_time       DateTime
  entry_point    Decimal  @db.Decimal(20, 8)
  close_point    Decimal  @db.Decimal(20, 8)
  user           user     @relation(fields: [user_id], references: [id])
  win_loss       Boolean
  amout_win      Decimal  @db.Decimal(20, 8)
  user_id        Int
}

model testOrder {
  id Int @id @default(autoincrement()) @map("id")
  buy_values Decimal @db.Decimal(20, 8)
  sell_values Decimal @db.Decimal(20, 8)
  open Boolean
  created DateTime @default(now())
  close DateTime
}

model caixa_central {
  id            Int      @id @default(autoincrement()) @map("id")
  nome          String
  typo          Tipo
  valor         Decimal
  user_id       Int
  user          user     @relation(fields: [user_id], references: [id])
  sub_tipo      sub_tipo
  registre_date DateTime @default(now())
}

enum sub_tipo {
  Compras
  Lazer
  Transporte
  Contas
  Investimentos
}

enum Tipo {
  RECEITA
  DESPESA
}

model product {
  id    Int     @id @default(autoincrement()) @map("id")
  name  String
  type  String
  color String
  price Decimal
  url   String
}
